<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Home Automation Dashboard</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="logo">Home Automation</div>
        <ul>
            <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
            <li><a href="/features"><i class="fas fa-cogs"></i> Features</a></li>
            <li><a href="/dashboard" class="active"><i class="fas fa-chart-pie"></i> Dashboard</a></li>
            <li><a href="/chat"><i class="fas fa-comments"></i> Chatbot Assistant</a></li>
            <li><a href="/notifications"><i class="fas fa-bell"></i> Notifications</a></li>
            <li><a href="/rooms-data"><i class="fas fa-database"></i> Rooms Data</a></li>
            <li><a href="/login"><i class="fas fa-user"></i> Login</a></li>
            <li><a href="/about"><i class="fas fa-info-circle"></i> About Us</a></li>
            <li><a href="/contact"><i class="fas fa-envelope"></i> Contact Us</a></li>
        </ul>
    </div>

    <!-- Hamburger menu -->
    <div class="toggle-btn" onclick="toggleSidebar()">
        &#9776;
    </div>
    
    <!-- Main content -->
    <div class="main-content" id="main-content">
        <h1 class="features-container">Chatbot Assistant</h1>
        <section class="chat-container">
            <div class="card">
                <h3>Ask AI for Home Automation Tips</h3>
                <div id="chatHistory" class="chat-history" aria-live="polite">
                    <!-- Chat history will be displayed here -->
                </div>
                <div class="chat-input-container">
                    <input type="text" id="userInput" placeholder="Ask ChatGPT..." aria-label="User input for ChatGPT" />
                    <button onclick="askChatGPT()" aria-label="Send question to ChatGPT">Ask</button>
                </div>
            </div>
        </section>
    </div>

    <script src="/js/frontend.js"></script>
    <script>
        // Store conversation history in an array
const chatHistory = [];

async function askChatGPT() {
    const userInput = document.getElementById('userInput').value.trim();

    if (userInput === "") {
        displayMessage("Please enter a question.", "system");
        return;
    }

    // Display user's message
    displayMessage(userInput, "user");
    document.getElementById('userInput').value = ""; // Clear input

    // Display loading message while waiting for the response
    const loadingMessage = displayMessage("Thinking...", "system");

    try {
        const response = await fetch('/ask-chatgpt', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ input: userInput })
        });

        const data = await response.json();
        const chatGPTResponse = data.response || "No response received from ChatGPT.";

        // Remove the "Thinking..." message before displaying the response
        removeMessage(loadingMessage);

        // Display ChatGPT's response
        displayMessage(chatGPTResponse, "chatgpt");

    } catch (error) {
        console.error('Error fetching response from ChatGPT:', error);
        // Remove the "Thinking..." message on error
        removeMessage(loadingMessage);
        displayMessage("Sorry, there was an error communicating with ChatGPT. Please try again later.", "system");
    }
}

// Function to display messages in the chat history
function displayMessage(text, sender) {
    const chatHistoryDiv = document.getElementById('chatHistory');

    const messageDiv = document.createElement('div');
    messageDiv.classList.add('message', sender);

    if (sender === "user") {
        messageDiv.style.textAlign = "right";
        messageDiv.style.color = "blue";
    } else if (sender === "chatgpt") {
        messageDiv.style.textAlign = "left";
        messageDiv.style.color = "green";
    } else if (sender === "system") {
        messageDiv.style.textAlign = "center";
        messageDiv.style.color = "gray";
    }

    messageDiv.innerText = text;
    chatHistoryDiv.appendChild(messageDiv);

    // Scroll to the bottom of the chat history
    chatHistoryDiv.scrollTop = chatHistoryDiv.scrollHeight;

    // Add message to chat history array
    chatHistory.push({ sender, text });

    return messageDiv;  // Return the message div so it can be removed later
}

// Function to remove a message
function removeMessage(messageDiv) {
    if (messageDiv && messageDiv.parentNode) {
        messageDiv.parentNode.removeChild(messageDiv);
    }
}

    </script>

</body>
</html>
